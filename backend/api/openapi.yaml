openapi: 3.0.3
info:
  title: Cash
  description: Cash app
  version: 1.0.0
servers:
- url: /
tags:
- name: User
  description: Operations about user
- name: Cart
  description: Operations about cart
- name: Articles
  description: Operations about articles
paths:
  /user:
    post:
      tags:
      - User
      summary: Create user
      description: This can only be done once at the registration page
      operationId: createUser
      requestBody:
          content:
              application/json:
                  schema:
                      $ref: "#/components/schemas/User"
      responses:
        "200":
          description: "successful operation, user is logged in"
        "400":
          description: Invalid email supplied
        "413":
          description: Invalid password supplied
      x-swagger-router-controller: User
    put:
      tags:
      - User
      summary: Update user
      description: This can only be done by the logged in user.
      operationId: updateUser
      security:
        - bearerAuth: []
      requestBody:
          content:
              application/json:
                  schema:
                      $ref: "#/components/schemas/User"
      responses:
        "400":
          description: Invalid user supplied
        "404":
          description: User not found
      x-swagger-router-controller: User
    delete:
      tags:
      - User
      summary: Delete user
      description: This can only be done by the logged in user
      operationId: deleteUser
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User has been deleted
  /user/balance:
    get:
      tags:
      - User
      summary: Get user balance
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User balance
  /user/cart:
    get:
      tags:
      - User
      summary: Get user cart
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User cart
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
  /user/payment:
    post:
      tags:
      - User
      summary: Process payment on cart
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Payment info
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/BankCard'
  /cart/articles/add:
    post:
      tags:
      - Cart
      summary: Add article to cart
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticlesArray'
      responses:
        "200":
          description: Returns cart
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
  /cart/articles/remove:
    post:
      tags:
      - Cart
      summary: Remove articles from cart
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticlesArray'
      responses:
        "200":
          description: Returns cart
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
  /articles:
    get:
      tags:
      - Articles
      summary: Get all articles
      responses:
        "200":
          description: Returns all articles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticlesArray'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        userId:
          type: integer
        email:
          type: string
        password:
          type: string
          format: password
        name:
          type: string
      required:
        - email
        - password
        - name
        
      xml:
        name: User
    Cart:
      type: object
      properties:
        cartId:
          type: integer
        total:
          type: integer
        articles:
          type: array
          items:
            $ref: '#/components/schemas/Article'
    Article:
      type: object
      properties:
        articleId:
          type: integer
        name:
          type: string
        price:
          type: integer
    ArticlesArray:
      type: array
      items:
        $ref: '#/components/schemas/Article'
    BankCard:
      type: object
      properties:
        cardType:
          type: string
        cardNumber:
          type: string
        expDate:
          type: string
          format: date
        cvv:
          type: string

        
